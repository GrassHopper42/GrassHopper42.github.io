{"componentChunkName":"component---src-templates-post-jsx","path":"/spring-boot-localdatetime-error/","result":{"data":{"site":{"siteMetadata":{"title":"베짱이.dev"}},"markdownRemark":{"id":"eac17ad5-2bdc-59a0-9d0a-e2f6ccd6bd0a","excerpt":"오삽내 오늘의 삽질 내용 서비스 백엔드를 에서 으로 넘어가면서 까지 통으로 새로배우면서 뚝딱거리려니 힘들다. 그나마 로 타입지정하고 에서 데코레이션 달아보고 와 유사한 부분도 있어서 한결 수월하다는데 위안을 삼고 있다.\n오늘은 몇시간동안 낑낑거렸는데 허무하게 끝난 Trouble Shooting이 구글링할때 나오지 않은게 아쉬워 짧게나마 삽질 내용을 남겨보…","html":"<h2>오삽내</h2>\n<blockquote>\n<p>오늘의 삽질 내용</p>\n</blockquote>\n<p>서비스 백엔드를 <code class=\"language-text\">NestJS</code>에서 <code class=\"language-text\">Spring</code>으로 넘어가면서 <code class=\"language-text\">Java</code>까지 통으로 새로배우면서 뚝딱거리려니 힘들다. 그나마 <code class=\"language-text\">TypeScript</code>로 타입지정하고 <code class=\"language-text\">NestJS</code>에서 데코레이션 달아보고 <code class=\"language-text\">JavaScript</code>와 유사한 부분도 있어서 한결 수월하다는데 위안을 삼고 있다.\n오늘은 몇시간동안 낑낑거렸는데 허무하게 끝난 Trouble Shooting이 구글링할때 나오지 않은게 아쉬워 짧게나마 삽질 내용을 남겨보려한다.<br>\n<code class=\"language-text\">Spring Data Mongodb</code>로 DB연결하고 간단한 CRUD코드 몇개 만들어서 테스트를 돌려보는데 전혀 예상치도 못결 부분에서 에러가 터졌다.\n<code class=\"language-text\">createdAt</code>에 <code class=\"language-text\">Date</code>타입을 적용하기 위해 선언한 <code class=\"language-text\">LocalDateTime</code>타입에서 오류가 나서 클래스가 생성되지 못하고 꺼져버리는 것이었다.\n몇시간동안 구글링을 했는데 답이나오지 않아 스택오버플로우에 질문을 올리고 혼자 깨달음을 얻어 허무하게 끝나버렸다.</p>\n<h2>문제</h2>\n<p>아래는 <code class=\"language-text\">LocalDateTime</code>타입이 사용된 <code class=\"language-text\">User</code>모델의 일부이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// User.java</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDateTime</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@Document</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Id</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">ObjectId</span> id<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@CreatedDate</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@LastModifiedDate</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 상태로 테스트를 돌렸더니 아래의 에러를 볼 수 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make private java.time.LocalDateTime(java.time.LocalDate,java.time.LocalTime) accessible: module java.base does not &quot;opens java.time&quot; to unnamed module</code></pre></div>\n<h2>해결</h2>\n<h3>1. VmArgs 설정</h3>\n<p>이 에러 문구를 가지고 이렇게 저렇게 조합해보면서 구글링을 하다가 한 <a href=\"https://stackoverflow.com/questions/70412805/what-does-this-error-mean-java-lang-reflect-inaccessibleobjectexception-unable\">스택오버플로우 답변</a>을 발견했다.</p>\n<p><code class=\"language-text\">start-argument</code>로 <code class=\"language-text\">--add-opens java.base/java.time=ALL-UNNAMED</code>를 입력하라는 글이었는데, 이게 도통 뭔소리고 VSC에서 어떻게 입력해줘야 할지도 모르겠어서 넘겨버렸다.\n한참 낑낑대다가 스택오버플로우 질문을 남겼더니 위 답변의 링크를 주면서 이걸로 해결이 안되냐는 코멘트가 달렸다. 이게 진짜 되는건가 하고 VSC로 vm 설정하는 법을 찾아서 입력해봤다.</p>\n<p>VSC에서 위와 같은 args를 입력하기 위해서는 상단 <strong>Run</strong>탭에서 <strong>Open Configuration | Add Configuration</strong>을 누르거나 프로젝트 루트에서 <code class=\"language-text\">.vscode</code> 폴더에 있는 <code class=\"language-text\">launch.json</code>에 <code class=\"language-text\">vmArgs</code>을 키로 추가한 뒤 값에는 <code class=\"language-text\">-add-opens java.base/...</code>을 입력해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Use IntelliSense to learn about possible attributes.</span>\n  <span class=\"token comment\">// Hover to view descriptions of existing attributes.</span>\n  <span class=\"token comment\">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Launch Current File\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"mainClass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${file}\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"vmArgs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"--add-opens java.base/java.time=ALL-UNNAMED\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Launch ApiApplication\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"mainClass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"art.unhide.api.ApiApplication\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"projectName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"api\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"vmArgs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"--add-opens java.base/java.time=ALL-UNNAMED\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>IDE 짱짱맨... vim은 그냥 VSC 플러그인으로만 쓰는걸로...</p>\n</blockquote>\n<p>하지만 여전히 테스트에서는 같은 에러가 발생한다. 테스트에서 VmArgs를 입력하려면 <code class=\"language-text\">.vscode</code> 폴더의 <code class=\"language-text\">setting.json</code>파일에서 아래의 코드를 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"java.test.config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"vmArgs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--add-opens\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"java.base/java.time=ALL-UNNAMED\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>2. package 변경</h3>\n<p>위의 방법으로 작동시키면 정상적으로 작동하는데 로그에서 아래와 같은 경고문구를 볼 수 있었다.\n처음엔 테스트에서 별도로 VmArgs를 입력하는 방법을 몰라 이 방법을 썼었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">WARN 17980 --- [  restartedMain] o.s.data.convert.CustomConversions       : Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn&#39;t convert from a store-supported type; You might want to check your annotation setup at the converter implementation</code></pre></div>\n<p>시스템에서 <code class=\"language-text\">java.time.LocalDateTime</code>을 <code class=\"language-text\">org.joda.time.LocalDateTime</code>으로 convert 시켜같는 것 같다. 그래서 convert할 필요 없게 package를 바꿔줬다. 아래는 바뀐 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// User.java</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>joda<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocalDateTime</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 바뀐부분</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token annotation punctuation\">@Document</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Id</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">ObjectId</span> id<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@CreatedDate</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdAt<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@LastModifiedDate</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> updatedAt<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 방법을 쓰면 별다른 설정 없이도 문제없이 동작한다.</p>\n<blockquote>\n<p>그렇지만 로그는 여전히 <code class=\"language-text\">java.time</code>을 <code class=\"language-text\">org.joda.time</code>으로 convert한다... 찾아보니 사실 관련 없었던것... 그냥 뒷걸음질 치다 쥐 잡은 것 같다.</p>\n</blockquote>\n<h2>이유</h2>\n<p>는 잘 모르겠다... 구글링하다보니 <code class=\"language-text\">java.time</code> 뿐만 아니라 <code class=\"language-text\">java.util</code>같은 다른 자바 내장 패키지들도 이따금 private으로 선언하면 비슷한 에러를 띄우는것 같았다.\n유사한 문제에 대해서는 로그를 참고해 위의 VmArgs를 조금 바꿔서 추가해주면 해결될 듯 하다.<br>\n재밌는건 모델만 만들어 뒀을때는 문제가 발생하지 않는데 Repository와 Service, Controller를 만들어 주입시키면 문제가 생긴다.<br>\n<code class=\"language-text\">java.time</code>의 <code class=\"language-text\">ZonedDateTime</code>을 사용하는 경우도 있는것 같았는데 이건 자체적으로 convert가 되지 않는 것 같다.\n<a href=\"https://www.baeldung.com/spring-data-mongodb-zoneddatetime\">이 글</a>에서 <code class=\"language-text\">ZonedDateTime</code>의 Custom Converter를 만들어주는 방법을 상세하게 알려주고 있다.\nLocalDateTime과 ZonedDateTime의 차이를 비교해보고 더 유용하겠다 싶으면 적용해봐야겠다.</p>\n<h2>참고자료</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/70412805/what-does-this-error-mean-java-lang-reflect-inaccessibleobjectexception-unable\">StackOverflow</a></li>\n<li><a href=\"https://www.baeldung.com/spring-data-mongodb-zoneddatetime\">ZonedDateTime Converter</a></li>\n<li><a href=\"https://d2.naver.com/helloworld/645609\">NaverD2</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/issues/18817\">Spring-boot Github issue</a></li>\n</ul>","frontmatter":{"title":"[오삽내]private LocalDateTime 에러 해결...","date":"July 07, 2022","update":"July 07, 2022","tags":["Java","Spring","Mongodb","TroubleShooting"],"series":null},"fields":{"slug":"/spring-boot-localdatetime-error/","readingTime":{"minutes":6.37}}},"seriesList":{"edges":[{"node":{"id":"1df815ad-a8af-5b8e-9873-8b8115df804e","fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World!"}}},{"node":{"id":"b61a6bf6-30d5-5468-bca6-8c4399512593","fields":{"slug":"/nestjs-prisma-dbhandling/"},"frontmatter":{"title":"[NestJS]NestJS에서 Prisma 사용하기"}}},{"node":{"id":"5e97337a-e3ed-5e87-b9f7-a96f25f34820","fields":{"slug":"/gatsby-analytics/"},"frontmatter":{"title":"[Gatsby]블로그에 Google Analytics 연결"}}},{"node":{"id":"19c883bf-49e6-54a9-a7d6-a4413c774981","fields":{"slug":"/tmux-init/"},"frontmatter":{"title":"Tmux Setting"}}},{"node":{"id":"eac17ad5-2bdc-59a0-9d0a-e2f6ccd6bd0a","fields":{"slug":"/spring-boot-localdatetime-error/"},"frontmatter":{"title":"[오삽내]private LocalDateTime 에러 해결..."}}}]},"previous":{"fields":{"slug":"/tmux-init/"},"frontmatter":{"title":"Tmux Setting"}},"next":null},"pageContext":{"id":"eac17ad5-2bdc-59a0-9d0a-e2f6ccd6bd0a","series":null,"previousPostId":"19c883bf-49e6-54a9-a7d6-a4413c774981","nextPostId":null}},"staticQueryHashes":[]}